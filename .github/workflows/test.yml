name: Test

on: [push, pull_request]

jobs:
  test:
    services:
      postgres:
        image: postgres:17.5-alpine@sha256:ec01646a894c7c5aec8a29e0fe723ab093e24e2e055940090d282d8ab1c79d26
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: weblate
      mysql:
        image: mariadb:11.8.2@sha256:2bcbaec92bd9d4f6591bc8103d3a8e6d0512ee2235506e47a2e129d190444405
        env:
          MYSQL_ROOT_PASSWORD: weblate
        ports:
        - 3306:3306
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - '3.11'
        - '3.12'
        - '3.13'
        database:
        - sqlite
        - mariadb
        - postgresql
    name: Python ${{ matrix.python-version }}, ${{ matrix.database }}
    env:
      CI_DATABASE: ${{ matrix.database }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    - name: Install apt dependencies
      # gettext is needed as Django uses msgfmt to compile MO files
      run: |
        sudo apt update
        sudo apt install gettext xmlsec1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
    - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      with:
        cache-suffix: test
    - name: Install pip dependencies
      run: uv pip install --system -r requirements-dev.txt
    - name: Compile MO files
      run: ./scripts/generate-locales
    - name: Collect static files
      run: ./manage.py collectstatic
    - name: Django checks
      run: ./manage.py check
    - name: Test with Django
      run: |
        echo "::add-matcher::.github/matchers/pytest.json"
        pytest --junitxml=junit.xml weblate_web
        echo "::remove-matcher owner=pytest::"
    - name: Coverage
      run: coverage xml
    - uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        flags: unittests
        name: Python ${{ matrix.python-version }}
    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
permissions:
  contents: read
